<!-- Views/File/Index.cshtml -->
@using WebApplication1.Models
@model IEnumerable<WebApplication1.Models.FileModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Explorer</title>
    <!-- Include any necessary CSS or JavaScript files here -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        h1 {
            margin-bottom: 20px;
            padding: 10px;
            background-color: #333;
            color: white;
            text-align: center;
        }

        div {
            margin: 10px 0;
        }

        button {
            padding: 8px;
            margin-right: 10px;
            font-size: 14px;
        }

        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        li {
            padding: 10px;
            border-bottom: 1px solid #ddd;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

            li:hover {
                background-color: #e6e6e6;
            }

        .icon {
            margin-right: 10px;
            color: #007bff; /* Blue color for folder icon */
        }

        .file-icon {
            color: #4caf50; /* Green color for file icon */
        }

        .search-container {
            margin-bottom: 20px;
        }

        #searchBox {
            padding: 8px;
            font-size: 14px;
        }

        #searchButton {
            padding: 8px;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>File Explorer</h1>

    <div>
        <button onclick="createFolder()">Create Folder</button>
        <button onclick="createFile()">Create File</button>
        <button onclick="goBack()">Back</button>
    </div>

    <div class="search-container">
        <input type="text" id="searchBox" placeholder="Search" />
        <button id="searchButton" onclick="searchFiles()">Search</button>
    </div>

    <ul>
        @foreach (var file in Model)
        {
            <li><span class="icon @((file is FileModel) ? "fas fa-file file-icon" : "fas fa-folder")"></span>@file.Name</li>
        }
    </ul>

    <script>
        function createFolder() {
            var folderName = prompt('Enter folder name:');
            if (folderName) {
                // Call your API to create a folder
                // Example using Fetch API (replace with your actual API endpoint):
                fetch('/Folder/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Name: folderName })
                })
                    .then(response => {
                        if (response.ok) {
                            alert('Folder created successfully.');
                            return response.json(); // Return the created folder from the response
                        } else {
                            alert('Failed to create folder.');
                            throw new Error('Failed to create folder.');
                        }
                    })
                    .then(newFolder => {
                        // Append the new folder to the list
                        var ul = document.querySelector('ul');
                        var li = document.createElement('li');
                        li.textContent = newFolder.name;

                        // Add double-click event to open the folder
                        li.addEventListener('dblclick', function () {
                            openFolder(newFolder.name);
                        });

                        ul.appendChild(li);
                    })
                    .catch(error => {
                        console.error('Error creating folder:', error);
                        alert('An error occurred while creating the folder.');
                    });
            }
        }
        function openFolder(folderName) {
            // Call your API to get the contents of the folder
            // Example using Fetch API (replace with your actual API endpoint):
            fetch(`/api/Folder/Open?folderName=${encodeURIComponent(folderName)}`)
                .then(response => response.json())
                .then(folderContents => {
                    // Update the UI with the contents of the folder
                    var ul = document.querySelector('ul');
                    ul.innerHTML = '';
                    folderContents.forEach(item => {
                        var li = document.createElement('li');
                        li.textContent = item.name;
                        // Add the double-click event listener for folders
                        if (item.type === 'Folder') {
                            li.addEventListener('dblclick', function () {
                                openFolder(item.name);
                            });
                        }

                        ul.appendChild(li);
                    });
                })
                .catch(error => {
                    console.error('Error opening folder:', error);
                    alert('An error occurred while opening the folder.');
                });
        }

        function createFile() {
            var fileName = prompt('Enter file name:');
            if (fileName) {
                // Call your API to create a file
                // Example using Fetch API (replace with your actual API endpoint):
                fetch('/File/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Name: fileName })
                })
                    .then(response => {
                        if (response.ok) {
                            alert('File created successfully.');
                            location.reload(); // Refresh the page after creating the file
                        } else {
                            alert('Failed to create file.');
                        }
                    })
                    .catch(error => {
                        console.error('Error creating file:', error);
                        alert('An error occurred while creating the file.');
                    });
            }
        }

        function searchFiles() {
            var searchTerm = document.getElementById('searchBox').value;

            // Call your API to search for files
            // Example using Fetch API (replace with your actual API endpoint):
            fetch(`/api/File?searchTerm=${searchTerm}`)
                .then(response => response.json())
                .then(files => {
                    // Update the UI with the search results
                    var ul = document.querySelector('ul');
                    ul.innerHTML = '';
                    files.forEach(file => {
                        var li = document.createElement('li');
                        li.textContent = file.name;
                        ul.appendChild(li);
                    });
                })
                .catch(error => {
                    console.error('Error searching files:', error);
                    alert('An error occurred while searching for files.');
                });
        }

        function goBack() {
            // Call your API to get the contents of the previous folder
            // Example using Fetch API (replace with your actual API endpoint):
            fetch('/api/Folder/GoBack')
                .then(response => response.json())
                .then(folderContents => {
                    // Update the UI with the contents of the previous folder
                    var ul = document.querySelector('ul');
                    ul.innerHTML = '';
                    folderContents.forEach(item => {
                        var li = document.createElement('li');
                        li.textContent = item.name;

                        if (item.type === 'Folder') {
                            li.addEventListener('dblclick', function () {
                                openFolder(item.name);
                            });
                        }

                        ul.appendChild(li);
                    });
                })
                .catch(error => {
                    console.error('Error going back:', error);
                    alert('An error occurred while going back.');
                });
        }
    </script>
</body>
</html>




